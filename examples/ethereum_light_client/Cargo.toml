[package]
name = "demo-ethereum_light_client"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
codec = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"], optional = true }
#gstd = { workspace = true }
gstd = { workspace = true, features = ["debug"] }
gbuiltin-bls381.workspace = true
hex-literal.workspace = true
hex = { workspace = true, optional = true }
ssz_rs = { version = "0.9.0", default-features = false }
ark-serialize = { workspace = true }
ark-bls12-381 = { workspace = true, features = ["curve"] }
ark-scale.workspace = true
ark-ec.workspace = true
ark-ff.workspace = true
sha2.workspace = true
superstruct = "0.7.0"
ethereum-types = { version = "0.14.1", default-features = false, optional = true }
circular-buffer = { version = "0.1.7", default-features = false }
paste = "1.0.14"
ring = { git = "file:///home/user/devel/gear-tech/ring", branch = "gshep/excess_export", default-features = false, features = ["alloc"] }
tree_hash = { git = "file:///home/user/devel/gear-tech/tree_hash", branch = "gshep/no_std", default-features = false }
tree_hash_derive = { git = "file:///home/user/devel/gear-tech/tree_hash", branch = "gshep/no_std" }
primitive-types = { version = "0.12.2", default-features = false, features = ["codec"] }

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
getrandom = { version = "0.2", default-features = false, features = ["js"] }
lazy_static = { version = "1.1", features = ["spin_no_std"] }

[build-dependencies]
gear-wasm-builder.workspace = true

[features]
default = ["std"]
std = [
    "codec/std",
    "ssz_rs/std",
    "serde?/std",
    "hex?/std",
    "ark-serialize/std",
    "ark-bls12-381/std",
    "ark-scale/std",
    "ark-ec/std",
    "ark-ff/std",
    "sha2/std",
    "ethereum-types?/std",
    "circular-buffer/use_std",
    "ring/std",
    "getrandom/std",
    "tree_hash/std",
    "primitive-types/std",
    "sha2/std",
]
serde = ["dep:serde", "hex", "ssz_rs/serde", "ethereum-types"]
